spring.profiles.active=alpha

#动态html访问资源路径
spring.thymeleaf.prefix=classpath:/templates/

# security 使能
security.basic.enabled = false
#spring.security.user.name=admin
#spring.security.user.password=admin

# Redis配置
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=192.168.51.240
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=785a9c2b48cc9503d80bd686268bcd9d
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0

#对于rabbitMQ的支持
#访问地址：http://localhost:15672/#/queues
spring.rabbitmq.host=192.168.51.240
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
spring.rabbitmq.virtual-host=/
#  消息发送到交换机确认机制,是否确认回调
spring.rabbitmq.publisher-confirms=true

## 最大重试次数 (无效)
#spring.rabbitmq.listener.simple.retry.max-attempts = 5
## 是否开启消费者重试（为false时关闭消费者重试，这时消费端代码异常会一直重复收到消息）
#spring.rabbitmq.listener.simple.retry.enabled = true
## 重试间隔时间（单位毫秒）
#spring.rabbitmq.listener.simple.retry.initial-interval = 5000
## 重试次数超过上面的设置之后是否丢弃（false不丢弃时需要写相应代码将该消息加入死信队列）
#spring.rabbitmq.listener.simple.default-requeue-rejected = true


spring.rabbitmq.dingTalk.text.url = https://oapi.dingtalk.com/robot/send?access_token=ef868a8ce6b89a617dc6e1e13a928d1f2b59636291560ad2fe800b6c396cb8c1X
spring.rabbitmq.dingTalk.link.url = https://oapi.dingtalk.com/robot/send?access_token=ef868a8ce6b89a617dc6e1e13a928d1f2b59636291560ad2fe800b6c396cb8c1X
spring.rabbitmq.dingTalk.markdown.url = https://oapi.dingtalk.com/robot/send?access_token=ef868a8ce6b89a617dc6e1e13a928d1f2b59636291560ad2fe800b6c396cb8c1
