spring.profiles.active=alpha

# security 使能
security.basic.enabled = false
#spring.security.user.name=admin
#spring.security.user.password=admin

# Redis配置
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=192.168.51.240
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=785a9c2b48cc9503d80bd686268bcd9d
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0

#对于rabbitMQ的支持
#访问地址：http://localhost:15672/#/queues
spring.rabbitmq.host=192.168.51.240
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
spring.rabbitmq.virtual-host=/
#  消息发送到交换机确认机制,是否确认回调
spring.rabbitmq.publisher-confirms=true

## 最大重试次数 (无效)
#spring.rabbitmq.listener.simple.retry.max-attempts = 5
## 是否开启消费者重试（为false时关闭消费者重试，这时消费端代码异常会一直重复收到消息）
#spring.rabbitmq.listener.simple.retry.enabled = true
## 重试间隔时间（单位毫秒）
#spring.rabbitmq.listener.simple.retry.initial-interval = 5000
## 重试次数超过上面的设置之后是否丢弃（false不丢弃时需要写相应代码将该消息加入死信队列）
#spring.rabbitmq.listener.simple.default-requeue-rejected = true


spring.rabbitmq.dingTalk.text.url = https://oapi.dingtalk.com/robot/send?access_token=ef868a8ce6b89a617dc6e1e13a928d1f2b59636291560ad2fe800b6c396cb8c1X
spring.rabbitmq.dingTalk.link.url = https://oapi.dingtalk.com/robot/send?access_token=ef868a8ce6b89a617dc6e1e13a928d1f2b59636291560ad2fe800b6c396cb8c1X
spring.rabbitmq.dingTalk.markdown.url = https://oapi.dingtalk.com/robot/send?access_token=ef868a8ce6b89a617dc6e1e13a928d1f2b59636291560ad2fe800b6c396cb8c1


#动态html访问资源路径
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
# ;charset=<encoding> is added
spring.thymeleaf.content-type=text/html
# set to false for hot refresh
spring.thymeleaf.cache=false

server.port=8443
server.tomcat.uri-encoding=utf-8
server.context-path=/springboot/

# https配置
server.http.port=8080
server.ssl.enabled=true
server.ssl.keyAlias=springboot
server.ssl.keyPassword=123456
server.ssl.keyStorePassword=123456
server.ssl.keyStore=classpath:config/server.jks
server.ssl.keyStoreType=JKS

# RSA秘钥对
rsa.public.key = MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCWkYRBmAvs3Jg/mhZobd4SKYsOkXuwNcZuxgFFazOYoRtjvXLjqBejNx+BOcJu9q8YHfZvZU7qM5/5FWbAp9aTV3bHLor9gEAheUMd+PRA2g5x2lFB7ANEaNRh2Boc0YB7A7k9ADJT3gfsFRSCLpO9phsuUophwHT3G27CxUQclQIDAQAB
rsa.private.key = MIICdQIBADANBgkqhkiG9w0BAQEFAASCAl8wggJbAgEAAoGBAJaRhEGYC+zcmD+aFmht3hIpiw6Re7A1xm7GAUVrM5ihG2O9cuOoF6M3H4E5wm72rxgd9m9lTuozn/kVZsCn1pNXdscuiv2AQCF5Qx349EDaDnHaUUHsA0Ro1GHYGhzRgHsDuT0AMlPeB+wVFIIuk72mGy5SimHAdPcbbsLFRByVAgMBAAECgYBan4jfxfjffkIwfbig8AeqHNDyWsP8YdFmGMzpEEXExqrqlDsTJLfdZ68Ro0cQbG8kb9xEXdBqi9nsHGJ08E/oACfEi5NGfzpq34YZMMe/QIn0KU5gei+e4ekOIgJZaLlMDNpdYUj1JckJE4Q0k1T+pJrYybiwUKlBXVisuXhW3QJBAM6NxcKdxAHvYrpWnS0QCxWgG9kDPWn9gCcWotlB3TXRaYOdXHhPkcf3JOuYt9J7gzQPJ2Q3U00Pf2Sn6IDodVsCQQC6nMt7Bg/ArT2ZxmU4lKlJ0Cs9j7YXapUmCRu2QBl6hzHpJ3XWL5+c2y8dtxviXryCOTb5HUKb6PgGW4ULlSjPAkACmAcuvXpzp8TuoB3TLgtllyAiZocD6LoOQ5uB7PDRNzMDAxvhKuaiwzjEeKN+UizAn5wYBxXVtucbpXwm+kRXAkBMRvLVYnDl7OoVBQcyzXE0/qXuD+P6RlKYrXhqUmEXuFMqXjrIRccUMnNbzhDTwq2C/Sf/Q3qKh/t5fccwKNP5AkBEfNRa7go2jGeS76neoYMGgaxwfznR+xjEINTr2kNBXp9QpSbq38HNLpQ6DDtYCYte/cK9il9ipt9IHlFxYwzy

